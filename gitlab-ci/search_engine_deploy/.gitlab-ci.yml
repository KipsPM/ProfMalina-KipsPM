---
image: alpine:latest

stages:
  # - test
  - staging
  - production

# test:
#   stage: test
#   script:
#     - exit 0
#   only:
#     - triggers
#     - branches

staging:
  stage: staging
  before_script:
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
    - apk add glibc-2.23-r3.apk
    - rm glibc-2.23-r3.apk
    - curl https://get.helm.sh/helm-v3.5.0-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version --client
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.12/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
    - kubectl config set-cluster otus-cluster --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=otus-cluster --user=admin
    - kubectl config use-context default
    - kubectl auth can-i create namespace
    - kubectl get namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo update
  script:
    - echo $KUBE_NAMESPACE
    - track="${1-stable}"
    - name="$CI_ENVIRONMENT_SLUG"
    - helm dep build search_engine
    - host="staging.my-random-name.xyz"
    - helm upgrade --install --wait --set ui.ingress.host="$host" --set ui.image.tag="latest" --set crawler.image.tag="latest" --namespace="$KUBE_NAMESPACE" --version="$CI_PIPELINE_ID-$CI_JOB_ID" "$name" search_engine
  variables:
    KUBE_NAMESPACE: staging
    TILLER_NAMESPACE: kube-system
  environment:
    name: staging
    url: https://staging.my-random-name.xyz
  only:
    refs:
      - master
    # kubernetes: active

production:
  stage: production
  before_script:
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk
    - apk add glibc-2.23-r3.apk
    - rm glibc-2.23-r3.apk
    - curl https://get.helm.sh/helm-v3.5.0-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version --client
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.12/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
    - kubectl config set-cluster otus-cluster --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=otus-cluster --user=admin
    - kubectl config use-context default
    - kubectl auth can-i create namespace
    - kubectl get namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo update
  script:
    - export track="${1-stable}"
    - >
      if [[ "$track" != "stable" ]]; then
        name="$name-$track"
      fi
    - echo $KUBE_NAMESPACE
    - track="${1-stable}"
    - name="$CI_ENVIRONMENT_SLUG"
    - helm dep build search_engine
    - host="staging.my-random-name.xyz"
    - >
      helm upgrade --install \
        --wait --set ui.ingress.host="$host" \
        --set ui.image.tag="$(curl http://CI_SERVER_URL/$CI_PROJECT_NAMESPACE/ui/raw/master/VERSION)" \
        --set crawler.image.tag="$(curl http://CI_SERVER_URL/$CI_PROJECT_NAMESPACE/crawler/raw/master/VERSION)" \
        --namespace="$KUBE_NAMESPACE" \
        --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
        "$name" \
        search_engine
  variables:
    KUBE_NAMESPACE: production
    TILLER_NAMESPACE: kube-system
  environment:
    name: production
    url: https://production.my-random-name.xyz
  # when: manual
  only:
    refs:
      - master
    # kubernetes: active
